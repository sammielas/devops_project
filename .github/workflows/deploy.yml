name: Deploy FinTech App

on:
  push:
    branches: [ development ] 

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: 'app/package-lock.json'

    - name: Install dependencies
      working-directory: ./app
      run: |
        npm ci
        npm install eslint --save-dev

    - name: Configure ESLint
      working-directory: ./app
      run: |
        if [ ! -f eslint.config.js ]; then
          echo 'export default [{ ignores: ["**/node_modules/**"], rules: { "semi": ["error", "always"] } }]' > eslint.config.js
        fi

    - name: Run linting
      working-directory: ./app
      run: npm run lint

    - name: Run tests
      working-directory: ./app
      run: npm test

    - name: Generate Unique Image Tag       
      run: echo "IMAGE_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/fintech-app:${{ env.IMAGE_TAG }} ./app

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Push Image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/fintech-app:${{ env.IMAGE_TAG }}

    - name: Configure git author
      run: |
        git config --local user.email " samflicks@gmail.com"   
        git config --local user.name "sammielas" 

    - name: Update Helm Chart Values
      run: |
        sed -i "s/tag: .*/tag: does-not-exist/" infra/environments/helm/values-*.yml
        git add infra/environments/helm/values-*.yml
        git commit -m "Update image tag to does-not-exist"
        git push origin development
   
        
