name: Deploy FinTech App

on:
  push:
    branches: [main]
  pull_request:
    branches: [main] 

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: 'app/package-lock.json'

    - name: Install dependencies
      working-directory: ./app
      run: |
        npm ci
        npm install eslint --save-dev

    - name: Configure ESLint
      working-directory: ./app
      run: |
        if [ ! -f eslint.config.js ]; then
          echo 'export default [{ ignores: ["**/node_modules/**"], rules: { "semi": ["error", "always"] } }]' > eslint.config.js
        fi

    - name: Run linting
      working-directory: ./app
      run: npm run lint

    - name: Run tests
      working-directory: ./app
      run: npm test

    - name: Generate Unique Image Tag
      run: echo "IMAGE_TAG=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - name: Build Docker Image
      run: |
        docker build -t fintech-app:${{ env.IMAGE_TAG }} ./app

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Push Image to ECR
      run: |
        docker tag fintech-app:${{ env.IMAGE_TAG }} ${{ secrets.ECR_REPO }}:${{ env.IMAGE_TAG }}
        docker push ${{ secrets.ECR_REPO }}:${{ env.IMAGE_TAG }}

  